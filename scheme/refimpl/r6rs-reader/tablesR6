; Table of tokens and the symbolic names of their kinds.

(define token-kinds
  '(
    ($ eof)
    ("backquote" backquote)
    ("boolean" boolean)
    ("bvecstart" bvecstart)
    ("character" character)
    ("comma" comma)
    ("eofobj" eofobj)
    ("id" id)
    ("lbracket" lbracket)
    ("lparen" lparen)
    ("miscflag" miscflag)
    ("number" number)
    ("period" period)
    ("quasisyntax" quasisyntax)
    ("quote" quote)
    ("rbracket" rbracket)
    ("rparen" rparen)
    ("splicing" splicing)
    ("string" string)
    ("syntax" syntax)
    ("unsyntax" unsyntax)
    ("unsyntaxsplicing" unsyntaxsplicing)
    ("vecstart" vecstart)
   ))


; Table of calls to action procedures.

(define actionprocs
  '(
    (cons <datum> <list3>)
    (cons <datum> <blst3>)
    (cons <datum> <data>)
    (cons <octet> <octets>)
    (emptyList)
    (emptyList)
    (emptyList)
    (emptyList)
    (emptyList)
    (emptyList)
    (identity <datum>)
    (identity <bytevector>)
    (identity <vector>)
    (identity <list>)
    (identity <abbreviation>)
    (identity <blst2>)
    (identity <list2>)
    (identity <datum>)
    (identity <datum>)
    (list <abbrev-prefix> <datum>)
    (list2bytevector <octets>)
    (list2vector <data>)
    (makeBool)
    (makeChar)
    (makeEOF)
    (makeFlag)
    (makeNum)
    (makeOctet)
    (makeString)
    (makeString)
    (makeStructured <location> <structured>)
    (makeSym)
    (makeSym)
    (pseudoAppend <data> <list4>)
    (pseudoAppend <data> <blst4>)
    (sourceLocation)
    (symBackquote)
    (symQuasisyntax)
    (symQuote)
    (symSplicing)
    (symSyntax)
    (symUnquote)
    (symUnsyntax)
    (symUnsyntax-splicing)
   ))


